{"version":3,"sources":["pages/ajax.js","setting.js","pages/Component/Card.js","pages/Component/Match.js","pages/errors.js","pages/Component/Desk.js","pages/Component/Render.js","pages/Component/Timer.js","pages/Component/Action.js","pages/end.js","pages/Component/siphon.js","pages/index.js","pages/loading.js","store/reducer.js","store/index.js","pages/Component/Notification.js","pages/mock/mock.js","App.js","index.js"],"names":["service","axios","create","timeout","interceptors","request","use","config","method","data","JSON","stringify","Object","objectSpread","params","headers","parse","action","Promise","resolve","token","sessionStorage","getItem","reject","err","console","log","response","status","ajax","res","Bluebird","url","then","r","catch","e","setting","LoadingURL","concat","DrawURL","PlayURL","PollingURL","TimeOutURL","GameOverURL","Card","props","replace","encodeURIComponent","react_default","a","createElement","className","style","backgroundImage","defaultProps","alt","Match","renderCard","count","_this","COUNT","list","BG","i","push","Component_Card","key","name","zIndex","toLocaleString","this","Component","connect","state","porps","other","heap","card","bg","errors","siphon_card_push","level","desc","siphon_otherStateCheck","siphon_other_pop","siphon_card_play","siphon_card_pop","siphon_card_timeout_service","siphon_card_timeout","Desk_componentWillReceiveProps","Action_handlePush","loading_load","Action_handleClick_handleNextGen","Action_handleClick_handleJumped","Action_handleClick_handleGiveUp","Desk","handleAnimate","document","getElementById","classList","toggle","setTimeout","handleEnter","event","Listen","CARDNUM","self","SSTACK","OSTACK","next","DESK","id","onClick","nextProps","_this2","DrawOver","ErrorHandle","stack","img","dispatch","_ref","type","Index","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderAction","actions","map","item","index","disabled","ACTION","title","HAND","draw","color","handlePush","choosed","Component_Match","Component_Desk","children","React","Timer","resetTimer","clearInterval","timer","setState","setInterval","updateTime","time","timeAdd","preState","requestTime","timeEnd","requireTime","Timeout","Polling","limit","undefined","Action","currentTarget","contains","remove","filter","add","handleClick","handleNextGen","names","indexes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","_item$split","value","split","_item$split2","slicedToArray","return","length","requestPlay","handleJumped","requestJump","handleGiveUp","requestGiveUp","handlePolling","requestPolling","Render","Component_Timer","End","msg","isWin","Siphon","gameover","gameStateCheck","failure","t","arguments","check","userToken","PlayBefore","win","handNum","pop","_len","states","Array","_key","_this$exc","exc","gameState","apply","_len2","_key2","_this$exc2","confi","_len3","_key3","DrawBefore","receivedRequest","otherStateCheck","MyTurn","excNextCard","gameEnd","end","get","settings","TOKEN","warn","Date","Draw","bool","Play","NextRound","TimeOut","HANDNUM","STATUS","pages_end","Component_Action","siphon","Loading","loading","text","setupEnv","InitGame","load","delay","react","renderLoading","pages","defaultState","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","produce","draft","lookup","l","parseInt","splice","@@INIT","Init","bgImg","setItem","mcard","ocard","Remove","shift","Notification","LIST","Random","Mock","randomCard","integer","image","mock","paragraph","body","boolean","App","es","pages_loading","Component_Notification","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.1963234b.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport Bluebird from 'bluebird';\r\n\r\nconst service = axios.create({\r\n    timeout: 5000   // 请求超时时间\r\n})\r\n\r\n// 添加请求拦截器\r\nservice.interceptors.request.use(function(config){\r\n    // 在发送请求之前做些什么\r\n    config.method === 'post'\r\n        ? config.data = JSON.stringify({...config.data})\r\n        : config.params = { ...config.params };\r\n    config.headers['Content-Type'] = 'application/x-www-form-urlencoded';\r\n    \r\n    let data = JSON.parse(config.data);\r\n\r\n    if(data.action === \"init\"){\r\n        return Promise.resolve(config);\r\n    }\r\n\r\n    if(data.action !== \"init\" && data.token === sessionStorage.getItem(\"TK\")){\r\n        return Promise.resolve(config);\r\n    }else{\r\n        return Promise.reject(config);\r\n    }\r\n}, function(err){   //请求错误处理\r\n    console.log(\"catch: \", err);\r\n    return Promise.reject(\"Unknown Error. Please reset\");\r\n});\r\n\r\n// 添加响应拦截器\r\nservice.interceptors.response.use(function(response){\r\n    // 对响应数据做点什么\r\n    if (response.data.status === 200){\r\n        return Promise.resolve(response.data);\r\n    }else{\r\n        console.log(response);\r\n        throw Promise.reject(\"服务器响应错误，请刷新重试\");\r\n    }\r\n}, function(err){\r\n    // 对响应错误做点什么\r\n    //console.log(JSON.stringify(err.response));\r\n    if(err.response.status === 404){\r\n        return Promise.reject(\"404 错误，请联系管理员\");\r\n    }else{\r\n        return Promise.reject(err);\r\n    }\r\n});\r\n\r\nexport default function(res){\r\n    return new Bluebird((resolve, reject)=>{\r\n        service({\r\n            method: res.method || 'post',\r\n            url: res.url,\r\n            ...res\r\n        })\r\n        .then(r=>{\r\n            resolve(r.data)\r\n        })\r\n        .catch(e=>{\r\n            reject(e)\r\n        })\r\n    })\r\n};","const ApiPort = \"/api\";\r\n\r\nconst LoadingURL = `${ApiPort}/init`;\r\n\r\nconst DrawURL = `${ApiPort}/draw`;\r\n\r\nconst PlayURL = `${ApiPort}/play`;\r\n\r\nconst PollingURL = `${ApiPort}/polling`;\r\n\r\nconst TimeOutURL = `${ApiPort}/timeout`;\r\n\r\nconst GameOverURL = `${ApiPort}/gameover`;\r\n\r\nexport default {\r\n    LoadingURL,\r\n    DrawURL,\r\n    PlayURL,\r\n    PollingURL,\r\n    TimeOutURL,\r\n    GameOverURL,\r\n}","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Card = (props)=>{\r\n    let url = props.url.replace(/\\s/g, encodeURIComponent(' '));  //转义, 否则不显示图片\r\n    return <div\r\n        className=\"card\"\r\n        style={{\r\n            backgroundImage: `url(\"${url}\")`\r\n        }}\r\n    >\r\n    </div>\r\n}\r\n\r\nCard.propTypes = {\r\n    url: PropTypes.string,\r\n    alt: PropTypes.string,\r\n}\r\n\r\nCard.defaultProps = {\r\n    url: \"\",\r\n    alt: \"\"\r\n}\r\n\r\nexport default Card;","import React, {Component} from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport Card from './Card';\r\n\r\n/**\r\n * @summary 渲染对手手牌\r\n */\r\nclass Match extends Component{\r\n    render(){\r\n        return <div className=\"content\">\r\n            <div className=\"zone\">\r\n                {this.renderCard()}\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    /**\r\n     * @summary 渲染卡背\r\n     */\r\n    renderCard = ()=>{\r\n        let count = this.props.COUNT;\r\n        let list = [];\r\n        let url = this.props.BG;\r\n        for(let i = 0; i < count; i++){\r\n            list.push(<Card\r\n                key={`${i}k`}\r\n                name={i}\r\n                style={{\r\n                    zIndex: i*10,\r\n                }}\r\n                alt={i.toLocaleString()}\r\n                url={url}\r\n            />);\r\n        }\r\n        return list;\r\n    }\r\n}\r\n\r\nlet mapState = (state, porps)=>{\r\n    return {\r\n        COUNT: state.other.heap,\r\n        BG: state.card.bg,\r\n    }\r\n}\r\n\r\nexport default connect(mapState)(Match);","export default (e)=>({\r\n    siphon_card_push: {level: \"Error\", desc: `抽卡错误！请重新尝试。若依然失败请将下行之后出现的错误信息汇报给管理员！\\nsiphon_card_push\\n${e}`},\r\n    siphon_otherStateCheck: {level: \"Error\", desc: `未知错误！请等待响应。若依然失败请将联系管理员\\nsiphon_otherStateCheck\\n${e}`},\r\n    siphon_other_pop: {level: \"Error\", desc: `未知错误！请等待响应。若依然失败请将下行之后出现的错误信息汇报给管理员！\\nsiphon_other_pop\\n${e}`},\r\n    siphon_card_play: {level: \"Info\", desc: `出卡错误！${e}`},\r\n    siphon_card_pop: {level: \"Error\", desc: `出卡错误！请重新尝试。若依然失败请将下行之后出现的错误信息汇报给管理员！\\nsiphon_card_pop\\n${e}`},\r\n    siphon_card_timeout_service: {level: \"Error\", desc: `${e}\\nsiphon_card_timeout_service`},\r\n    siphon_card_timeout: {level: \"Error\", desc: `超时错误！请等待响应。若依然失败请将下行之后出现的错误信息汇报给管理员！\\nsiphon_card_timeout\\n${e}`},\r\n    Desk_componentWillReceiveProps: {level: \"Error\", desc: `抽牌错误，请联系管理员。\\nDesk_componentWillReceiveProps\\n${e}`},\r\n    Action_handlePush: {level: \"Error\", desc: `选择牌时出错！请联系管理员\\nAction_handlePush\\n${e}`},\r\n    loading_load: {level: \"Error\", desc: `Loading错误！请重开游戏或联系管理员\\nloading_load\\n${e}`},\r\n\r\n    Action_handleClick_handleNextGen:{level: \"Warnning\", desc: \"你没有选择任何牌！请至少选择一张牌再打出\"},\r\n    Action_handleClick_handleJumped: {level: \"Info\", desc: \"你选择了跳过该次出牌！\"},\r\n    Action_handleClick_handleGiveUp: {level: \"Warnning\", desc: \"你选择了放弃游戏！\"},\r\n});","import React, {Component} from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport Card from './Card';\r\nimport PropTypes from 'prop-types';\r\nimport '../Less/desk.less';\r\nimport ErrorHandle from '../errors';\r\n\r\nclass Desk extends Component{\r\n    render(){\r\n        let url = {self: this.props.SSTACK, bg: this.props.BG, other: this.props.OSTACK, next: this.props.DESK};\r\n        return <div className=\"stack\">\r\n            <Card\r\n                alt={\"自己上次出的牌\"}\r\n                url={url.self}\r\n            />\r\n            <div\r\n                id='stack'\r\n                className=\"desk\"\r\n                style={{\r\n                    backgroundImage: `url(\"${url.bg}\")`\r\n                }}\r\n                onClick={this.handleEnter}\r\n            >\r\n                <div id=\"before\" style={{backgroundImage: `url(\"${url.bg}\")`}}></div>\r\n                <div id='card'>\r\n                <figure className='front' style={{\r\n                    backgroundImage: `url(\"${url.next}\")`\r\n                }}></figure>\r\n                <figure className='back' style={{\r\n                    backgroundImage: `url(\"${url.bg}\")`\r\n                }}></figure>\r\n                </div>\r\n                <div id=\"after\" style={{backgroundImage: `url(\"${url.bg}\")`}}></div>\r\n            </div>\r\n            <Card\r\n                alt={\"对手上次出的牌\"}\r\n                url={url.other}\r\n            />\r\n        </div>\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.DESK !== this.props.DESK){\r\n            console.log(\"new card\");\r\n            this.handleAnimate()\r\n                .then(r=>{\r\n                    this.props.DrawOver();\r\n                    document.getElementById(\"stack\").classList.toggle(\"animate\");\r\n                })\r\n                .catch(e=>\r\n                    this.props.Listen(ErrorHandle(e).Desk_componentWillReceiveProps)\r\n                );\r\n        }\r\n    }\r\n    /**\r\n     * 播放抽牌动画\r\n     */\r\n    handleAnimate = ()=>{\r\n        return new Promise((resolve, reject)=>{\r\n            document.getElementById(\"stack\").classList.toggle(\"animate\");\r\n            setTimeout(resolve, 600);\r\n        })\r\n    }\r\n    /**\r\n     * 打印剩余卡片信息\r\n     */\r\n    handleEnter = (event)=>{\r\n        this.props.Listen({level: \"Info\", desc: `还剩余张数：${this.props.CARDNUM}张`});\r\n    }\r\n}\r\n\r\nDesk.propTypes = {\r\n    url: PropTypes.object,\r\n    tip: PropTypes.object,\r\n    count: PropTypes.number\r\n}\r\n\r\nconst mapState = (state, props)=>{\r\n    return{\r\n        CARDNUM: state.card.count,\r\n        SSTACK: state.self.stack,\r\n        OSTACK: state.other.stack,\r\n        BG: state.card.bg,\r\n        DESK: state.stack.img,\r\n    }\r\n}\r\nconst mapDispatch = (dispatch)=>{\r\n    return{\r\n        Listen: ({level, desc})=>dispatch({type:\"Listen\", data:{level, desc}}),\r\n        DrawOver: ()=>dispatch({type: \"DrawOver\"})\r\n    }\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(Desk);","import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport '../Less/index.less';\r\nimport Match from './Match';\r\nimport Desk from './Desk';\r\nimport Card from './Card';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * @summary 渲染相关\r\n */\r\nclass Index extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            choosed: [],\r\n        }\r\n    }\r\n    render(){\r\n        return <div id=\"iroot\">\r\n            <Match />\r\n            \r\n            <Desk />\r\n\r\n            <div className=\"content\">\r\n                {this.props.children}\r\n                <div className=\"actionbar\">\r\n                    {this.renderAction()}\r\n                </div>\r\n                <div className=\"zone\">\r\n                    {this.renderCard()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n    //渲染动作\r\n    renderAction = ()=>{\r\n        return this.props.actions.map((item, index)=>{\r\n            return <button disabled={!this.props.ACTION} className=\"action\" key={index} onClick={item.action}>\r\n                {item.title}\r\n            </button>\r\n        })\r\n    }\r\n    //渲染卡面\r\n    renderCard = ()=>{\r\n        let cards = this.props.HAND;\r\n        return cards.map((item, index)=>{\r\n            let url = item.img;\r\n            let name = `${item.draw}_${item.color}|${index}`;\r\n            return <button\r\n                name={name}\r\n                style={{\r\n                    zIndex: index*10,\r\n                }}\r\n                key={name}\r\n                onClick={this.props.handlePush}\r\n            >\r\n                <Card\r\n                    url={url}\r\n                    alt={name}\r\n                    name={name}\r\n                />\r\n            </button>\r\n        });\r\n    }\r\n}\r\n\r\nconst mapState = (state)=>{\r\n    return{\r\n        HAND: state.self.heap,\r\n        ACTION: state.action,\r\n    }\r\n}\r\n\r\nIndex.propTypes = {\r\n    actions: PropTypes.array,\r\n    handlePush: PropTypes.func,\r\n}\r\n\r\nexport default connect(mapState)(Index);","import React,{Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * 有问题\r\n */\r\nclass Timer extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            time: 0,\r\n            limit: 15,\r\n            timer: undefined,\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        this.resetTimer();\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.state.timer);\r\n        this.setState({\r\n            timer: undefined,\r\n        });\r\n    }\r\n    /**\r\n     * 重置时间轮询\r\n     */\r\n    resetTimer = ()=>{\r\n        clearInterval(this.state.timer);\r\n        this.setState({\r\n            timer: setInterval(this.updateTime, 1000),\r\n            time: 0,\r\n        });\r\n    }\r\n    /**\r\n     * 时间Plus\r\n     */\r\n    timeAdd = ()=>{\r\n        this.setState(preState=>({\r\n            time: preState.time + 1,\r\n        }));\r\n        this.requestTime();\r\n    }\r\n    /**\r\n     * 时间结束\r\n     */\r\n    timeEnd = ()=>{\r\n        this.setState(preState=>({\r\n            time: 0,\r\n            timer: clearInterval(preState.timer),\r\n        }));\r\n        this.requireTime();\r\n    }\r\n    /**\r\n     * 自己回合超时设置\r\n     */\r\n    requireTime = ()=>{\r\n        if(this.props.action){\r\n            this.props.Timeout();\r\n        }\r\n    }\r\n    /**\r\n     * 轮询对方出牌\r\n     */\r\n    requestTime = ()=>{\r\n        if(!this.props.action){\r\n            console.log(\"request time\");\r\n            this.props.Polling();\r\n        }\r\n    }\r\n    /**\r\n     * 每秒更新计时器\r\n     */\r\n    updateTime = ()=>{\r\n        if (this.state.time >= this.state.limit){\r\n            this.timeEnd();\r\n        }else{\r\n            this.timeAdd();\r\n        }\r\n    }\r\n    componentWillUpdate(nextProps){\r\n        if(nextProps.action !== this.props.action){\r\n            document.getElementById(\"timer\").classList.toggle(\"hidden\");\r\n            this.resetTimer();\r\n        }\r\n    }\r\n    render(){\r\n        return <div id=\"timer\">\r\n            {this.state.time}\r\n        </div>\r\n    }\r\n}\r\n\r\nTimer.propTypes = {\r\n    action: PropTypes.bool,\r\n    Timeout: PropTypes.func,\r\n}\r\n\r\nexport default Timer;","import React, {Component} from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport Render from './Render';\r\nimport Timer from './Timer';\r\nimport ErrorHandle from '../errors';\r\n\r\n/**\r\n * @summary 事件控制相关\r\n * TODO: 写时间控制的单元\r\n */\r\nclass Action extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            actions: [{\r\n                title: \"出牌\",\r\n                action: this.handleClick.handleNextGen\r\n            }, {\r\n                title: \"跳过\",\r\n                action: this.handleClick.handleJumped\r\n            }, {\r\n                title: \"投降\",\r\n                action: this.handleClick.handleGiveUp\r\n            }],\r\n            choosed: []\r\n        }\r\n    }\r\n    render(){\r\n        return <Render actions={this.state.actions} handlePush={this.handlePush}>\r\n            <Timer action={this.props.ACTION} Timeout={this.handleClick.handleJumped} Polling={this.handleClick.handlePolling}/>\r\n        </Render>\r\n    }\r\n\r\n    /**\r\n     * 选择或反选牌\r\n     */\r\n    handlePush = (e)=>{\r\n        console.log(e.currentTarget.name);\r\n        if(!e.currentTarget.classList.contains('chosed')){\r\n            e.currentTarget.classList.add(\"chosed\")\r\n            let choosed = this.state.choosed;\r\n            choosed.push(e.currentTarget.name)\r\n            this.setState({\r\n                choosed,\r\n            })\r\n        }else{\r\n            try{\r\n                e.currentTarget.classList.remove(\"chosed\")\r\n            }catch(e){\r\n                this.props.Listen(ErrorHandle(e).Action_handlePush);\r\n            }finally{\r\n                let choosed = this.state.choosed;\r\n                choosed = choosed.filter((item)=>{\r\n                    return item !== e.currentTarget.name;\r\n                })\r\n                this.setState({\r\n                    choosed,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    handleClick = {\r\n        //尝试出牌\r\n        handleNextGen: (e)=>{\r\n            let names = [];\r\n            let indexes = [];\r\n            for(let item of this.state.choosed){\r\n                let [name, index] = item.split(\"|\");\r\n                names.push(name);\r\n                indexes.push(index);\r\n            }\r\n            if(this.state.choosed.length === 0){\r\n                this.props.Listen(ErrorHandle().Action_handleClick_handleNextGen);\r\n                return;\r\n            }\r\n            this.props.requestPlay(names, indexes);\r\n        },\r\n        //直接跳过回合\r\n        handleJumped: (e)=>{\r\n            this.props.Listen(ErrorHandle().Action_handleClick_handleJumped);\r\n            this.props.requestJump();\r\n        },\r\n        //放弃游戏\r\n        handleGiveUp: (e)=>{\r\n            this.props.Listen(ErrorHandle().Action_handleClick_handleGiveUp);\r\n            this.props.requestGiveUp();\r\n        },\r\n        //轮询\r\n        handlePolling: (e)=>{\r\n            this.props.requestPolling();\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst mapState = (state, props)=>{\r\n    return{\r\n        ACTION: state.action,\r\n    }\r\n}\r\n\r\nconst mapDispatch = (dispatch)=>{\r\n    return {\r\n        Listen: ({level, desc})=>dispatch({type:\"Listen\", data:{level, desc}})\r\n    }\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(Action);","import React from \"react\";\r\nimport './Less/end.less';\r\n\r\nconst End = (props)=>{\r\n    let msg;\r\n    if(props.isWin){\r\n        msg = \"恭喜你获得胜利！\";\r\n    }else{\r\n        msg = \"下次再接再厉！\";\r\n    }\r\n    return <div id=\"end\"><p>{msg}</p></div>\r\n}\r\n\r\nexport default End;","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport ajax from '../ajax';\r\nimport settings from '../../setting';\r\nimport Action from './Action';\r\nimport End from '../end';\r\nimport ErrorHandle from '../errors';\r\n\r\n/**\r\n * @summary 网络事件相关\r\n */\r\nclass Siphon extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            win: undefined,\r\n        }\r\n    }\r\n    render(){\r\n        return this.props.STATUS ? \r\n            <End isWin={this.state.win}/>\r\n        : <Action\r\n            requestPlay={this.requestPlay}\r\n            requestGiveUp={this.requestGiveUp}\r\n            requestJump={this.requestJump}\r\n            requestPolling={this.requestPolling}\r\n        />\r\n    }\r\n\r\n//------------------------------------自己回合的方法-----------------------------------------------\r\n    /**\r\n     * 放弃游戏\r\n     * TODO: 没写完。还有时间轮询也没写完。对手回合那些都没写\r\n     */\r\n    requestGiveUp = ()=>{\r\n        this.card.gameover(false);\r\n    }\r\n    /**\r\n     * 跳过该回合\r\n     */\r\n    requestJump = ()=>{\r\n        //检查用户令牌\r\n        this.gameStateCheck.failure((t=\"TK\")=>this.check.userToken(t))\r\n            .then(r=>{\r\n                this.card.timeout();\r\n            });\r\n    }\r\n    /** \r\n     * @summary 请求出卡\r\n     * @param {Array} card 牌信息数组\r\n     * @param {Array} index 手牌顺序数组（用于展示\r\n    */\r\n    requestPlay = (card, index)=>{\r\n        this.props.PlayBefore();\r\n        //检查用户令牌, 和手牌状况\r\n        this.gameStateCheck.win(this.check.handNum)\r\n            .then(r=>{\r\n                return this.gameStateCheck.failure((t=\"TK\")=>this.check.userToken(t))\r\n            })\r\n            .then(r=>{\r\n                this.card.pop(card, index);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * 都是true时正常执行, 否则执行游戏结束指令\r\n     */\r\n    gameStateCheck = {\r\n        win: (...states)=>{\r\n            //检查网络的没写\r\n            return new Promise((resolve, reject)=>{\r\n                if(this.exc.gameState(...states)){\r\n                    resolve();\r\n                }else{\r\n                    this.card.gameover(true);\r\n                }\r\n            });\r\n        },\r\n        failure: (...states)=>{\r\n            //检查网络的没写\r\n            return new Promise((resolve, reject)=>{\r\n                if(this.exc.gameState(...states)){\r\n                    resolve();\r\n                }else{\r\n                    this.card.gameover(false);\r\n                }\r\n            });\r\n        },\r\n    }\r\n\r\n    exc = {\r\n        gameState: (...states)=>{\r\n            let confi = false;\r\n            for(let item in states){\r\n                if(states[item]()){\r\n                    confi=true;\r\n                }else{\r\n                    confi=false;\r\n                    break;\r\n                }\r\n            }\r\n            return confi;\r\n        }\r\n    }\r\n\r\n//---------------------------------------对手回合的方法-------------------------------------------\r\n    /**\r\n     * 请求轮询\r\n     */\r\n    requestPolling = ()=>{\r\n        this.props.DrawBefore();\r\n        this.other.pop();\r\n    }\r\n    /**\r\n     * 获取到了对手的信息\r\n     */\r\n    receivedRequest = (r)=>{\r\n        //还没测试\r\n        this.otherStateCheck(r)\r\n            .then(r=>{\r\n                this.props.MyTurn(r);\r\n                this.excNextCard();\r\n            });\r\n    }\r\n    /**\r\n     * 对手状态检查\r\n     */\r\n    otherStateCheck = (r)=>{\r\n        //没写网络检查\r\n        return new Promise((resolve, reject)=>{\r\n            switch(r.action){\r\n                case 1:\r\n                    //对手跳过了\r\n                    resolve(undefined);\r\n                    break;\r\n                case 2:\r\n                    //对手放弃了\r\n                    this.gameEnd.win();\r\n                    break;\r\n                case 3:\r\n                    //对手出牌了\r\n                    if(r.end){\r\n                        //游戏结束了\r\n                        r.get ? this.gameEnd.failure() : this.gameEnd.win();\r\n                    }\r\n                    resolve(r.card);\r\n                    break;\r\n                default:\r\n                    this.props.Listen(ErrorHandle(r.msg).siphon_otherStateCheck);\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n\r\n//--------------------------------------链接对手和玩家的桥梁-------------------------------------------\r\n    /**\r\n     * @summary 请求抽卡\r\n     */\r\n    excNextCard = ()=>{\r\n        this.props.DrawBefore();\r\n        this.gameStateCheck.failure((t=\"TK\")=>this.check.userToken(t))\r\n            .then(r=>{\r\n                this.card.push();\r\n            });\r\n    }\r\n\r\n    gameEnd = {\r\n        win: ()=>{\r\n            this.props.End();\r\n            this.setState({\r\n                win: true,\r\n            })\r\n        },\r\n        failure: ()=>{\r\n            this.props.End();\r\n            this.setState({\r\n                win: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 不做检查, 只执行\r\n     */\r\n    other = {\r\n        /**\r\n         * 轮询对手结束没有\r\n         */\r\n        pop: ()=>{\r\n            ajax({\r\n                method: 'post',\r\n                url: settings.PollingURL,\r\n                data: {\r\n                    token: this.props.TOKEN,\r\n                    action: 'polling',\r\n                }\r\n            })\r\n            .then(r=>{\r\n                console.warn(\"GameEnd?\", r.get);\r\n                this.receivedRequest(r);\r\n            })\r\n            .catch(e=>{\r\n                this.props.Listen(ErrorHandle(e).siphon_other_pop);\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 不做检查, 只执行\r\n     */\r\n    card = {\r\n        /**\r\n         * @summary 执行抽卡\r\n         */\r\n        push: ()=>{\r\n            ajax({\r\n                method: 'post',\r\n                url: settings.DrawURL,\r\n                data: {\r\n                    token: this.props.TOKEN,\r\n                    time: new Date(),\r\n                    action: 'draw',\r\n                }\r\n            })\r\n            .then(r=>{\r\n                if(r.state){\r\n                    this.props.Draw(r.card);\r\n                }\r\n            })\r\n            .catch(e=>{\r\n                this.props.Listen(ErrorHandle(e).siphon_card_push);\r\n            });\r\n        },\r\n        /**\r\n         * 通知服务器游戏结束\r\n         */\r\n        gameover: (bool)=>{\r\n            ajax({\r\n                method: 'post',\r\n                url: settings.GameOverURL,\r\n                data: {\r\n                    token: this.props.TOKEN,\r\n                    time: new Date(),\r\n                    action: 'gameover',\r\n                    state: bool ? 'win' : 'failure'\r\n                }\r\n            }).then(r=>{console.log(\"game over\")}).catch(e=>console.log(\"服务器down\"));\r\n            bool ? this.gameEnd.win() : this.gameEnd.failure();\r\n        },\r\n        /**\r\n         * @summary 执行出卡\r\n         */\r\n        pop: (card, index)=>{\r\n            ajax({\r\n                method: 'post',\r\n                url: settings.PlayURL,\r\n                data: {\r\n                    token: this.props.TOKEN,\r\n                    time: new Date(),\r\n                    action: 'play',\r\n                    card,\r\n                }\r\n            })\r\n            .then(r=>{\r\n                if(r.msg === ''){\r\n                    this.props.Play(index);\r\n                    this.props.NextRound();\r\n                }else{\r\n                    this.props.Listen(ErrorHandle(r.msg).siphon_card_play);\r\n                }\r\n            })\r\n            .catch(e=>{\r\n                this.props.Listen(ErrorHandle(e).siphon_card_pop);\r\n            });\r\n        },\r\n        /**\r\n         * 执行TimeOut指令\r\n         */\r\n        timeout: ()=>{\r\n            ajax({\r\n                method: 'post',\r\n                url: settings.TimeOutURL,\r\n                data: {\r\n                    token: this.props.TOKEN,\r\n                    time: new Date(),\r\n                    action: 'timeout',\r\n                }\r\n            })\r\n            .then(r=>{\r\n                if(r.msg !== \"\"){\r\n                    this.props.Listen(ErrorHandle(r.msg).siphon_card_timeout_service);\r\n                }\r\n                this.props.TimeOut();\r\n                this.props.NextRound();\r\n            })\r\n            .catch(e=>{\r\n                this.props.Listen(ErrorHandle(e).siphon_card_timeout);\r\n            })\r\n        }\r\n    }\r\n    \r\n    check = {\r\n        /**\r\n         * 检查手牌数量\r\n         * @returns {Boolean} 若手牌数大于零返回true，否则返回false\r\n        */\r\n        handNum: ()=>{\r\n            return this.props.HANDNUM > 0 ? true : false;\r\n        },\r\n        /**\r\n         * 检查Token值\r\n         * @returns {Boolean} 若Token值在session里和内存里都一样, 则返回true, 否则返回false\r\n         */\r\n        userToken:  (token)=>{\r\n            return this.props.TOKEN === sessionStorage.getItem(token) ? true : false;\r\n        },\r\n    }\r\n}\r\n\r\nlet mapState = (state, props)=>{\r\n    return{\r\n        TOKEN: state.token,\r\n        HANDNUM: state.self.heap.length,\r\n        ACTION: state.action,\r\n        STATUS: state.status,\r\n    }\r\n}\r\n\r\nlet mapDispatch = (dispatch)=>{\r\n    return{\r\n        TimeOut: ()=>dispatch({type: \"TimeOut\"}),\r\n        DrawBefore: ()=>dispatch({type: \"DrawBefore\"}),\r\n        Draw: (r)=>dispatch({type: \"Draw\", data: r}),\r\n        PlayBefore: ()=>dispatch({type: \"PlayBefore\"}),\r\n        Play: (r)=>dispatch({type: \"Play\", data: r}),\r\n        NextRound: (r)=>dispatch({type: \"NextRound\"}),\r\n        MyTurn: (r)=>dispatch({type: \"MyTurn\", data: r}),\r\n        Listen: ({level, desc})=>dispatch({type:\"Listen\", data:{level, desc}}),\r\n        End: ()=>dispatch({type:\"End\"})\r\n    }\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(Siphon);","import React from \"react\";\r\nimport Siphon from './Component/siphon';\r\n\r\n/**\r\n * @summary 渲染相关\r\n */\r\nclass Index extends React.Component {\r\n    render(){\r\n        return <Siphon />\r\n    }\r\n}\r\n\r\nexport default Index;","import React,{Fragment, Component} from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport './Less/loading.less';\r\nimport Index from './index';\r\nimport ajax from './ajax';\r\nimport settings from '../setting';\r\nimport ErrorHandle from './errors';\r\n\r\nclass Loading extends Component{\r\n    state = {\r\n        loading: true,\r\n        text: '配对中....',\r\n    }\r\n    componentDidMount(){\r\n        this.load()\r\n    }\r\n    load(){\r\n        ajax({\r\n            method: 'post',\r\n            url: settings.LoadingURL,\r\n            data: {\r\n                time: new Date(),\r\n                action: \"init\"\r\n            },\r\n        })\r\n        .then(r=>{\r\n            this.setupEnv(r);\r\n            this.setState({\r\n                text: '配对成功, 准备开始游戏!'\r\n            });\r\n        })\r\n        .delay(3000)    //后期可以改为加载某些东西\r\n        .then(r=>{\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }).catch(e=>{\r\n            this.props.Listen(ErrorHandle(e).loading_load);\r\n        });\r\n    }\r\n    setupEnv = (r)=>{\r\n        this.props.InitGame(r);\r\n    }\r\n    render(){\r\n        return this.state.loading ? \r\n        <Fragment>\r\n            {this.renderLoading()}\r\n        </Fragment>\r\n        :\r\n        <Index />\r\n    }\r\n    renderLoading(){\r\n        return <Fragment>\r\n            <div className=\"loader\"></div>\r\n            <div className=\"pos\">{this.state.text}</div>\r\n        </Fragment>\r\n    }\r\n}\r\n\r\nlet mapDispatch = (dispatch)=>{\r\n    return {\r\n        InitGame: (r)=>dispatch({type: \"Init\", data: r}),\r\n        Listen: ({level, desc})=>dispatch({type:\"Listen\", data:{level, desc}})\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatch)(Loading);","import produce from 'immer';\r\n\r\nconst defaultState = {\r\n    token: '',\r\n    card: {\r\n        bg: '',\r\n        count: 54,\r\n    },\r\n    self: {\r\n        heap: [],\r\n        stack: undefined,\r\n    },\r\n    other: {\r\n        heap: 0,\r\n        stack: undefined,\r\n    },\r\n    action: true,\r\n    status: false,\r\n    stack: {\r\n        img: undefined,\r\n        card: undefined,\r\n    },\r\n    list: []\r\n}\r\n\r\nexport default (state = defaultState, action)=>\r\n    produce(state, draft=>{\r\n        var lookup = {\r\n            TimeOut: ()=>{\r\n                console.log(\"time out\");\r\n            },\r\n            DrawBefore: ()=>{\r\n                console.log(\"draw before\");\r\n            },\r\n            Draw: ()=>{\r\n                draft.stack.card = action.data;\r\n                draft.stack.img = action.data.img;\r\n                draft.card.count -= 1;\r\n            },\r\n            DrawOver: ()=>{\r\n                draft.self.heap.push(draft.stack.card);\r\n            },\r\n            PlayBefore: ()=>{\r\n                console.log(\"play before\");\r\n            },\r\n            Play: ()=>{\r\n                let l = draft.self.heap.length;\r\n                for(let i in action.data){\r\n                    i = parseInt(i);\r\n                    if(i >= 0 && i < l - 1){\r\n                        draft.self.stack = state.self.heap[i].img;\r\n                        draft.self.heap.splice(i, 1);\r\n                    }else{\r\n                        draft.list.push({level: \"Error\", desc: \"出牌错误。请联系管理员\"});\r\n                    }\r\n                }\r\n            },\r\n            '@@INIT': ()=>{\r\n                console.log(\"Init Game...\");\r\n            },\r\n            Init: ()=>{\r\n                draft.card.bg = action.data.bgImg;\r\n                draft.token = action.data.token;\r\n                sessionStorage.setItem('TK', action.data.token);\r\n                draft.action = action.data.action;\r\n                draft.card.count = 54;\r\n                draft.self.heap = action.data.mcard;\r\n                draft.other.heap = action.data.ocard;\r\n                draft.card.count -= action.data.mcard.length + action.data.ocard;\r\n            },\r\n            NextRound: ()=>{\r\n                draft.action = false;\r\n            },\r\n            MyTurn: ()=>{\r\n                draft.action = true;\r\n                if(action.data !== undefined){\r\n                    draft.other.stack = action.data.img;\r\n                }\r\n                draft.other.heap += 1;\r\n            },\r\n            Remove: ()=>{\r\n                draft.list.shift();\r\n            },\r\n            Listen: ()=>{\r\n                draft.list.push({level: action.data.level, desc: action.data.desc});\r\n            },\r\n            End: ()=>{\r\n                draft.status = true;\r\n            }\r\n        }\r\n        var defaultDo = ()=> {\r\n            console.log(action);\r\n            draft.list.push({level: \"Error\", desc: \"未知错误。请联系管理员\"});\r\n        };\r\n        lookup[action.type] ? lookup[action.type]() : defaultDo();\r\n    })","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducer';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  \twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\n    //compose函数需要从redux中引出来\r\n    \r\nconst enhancer = composeEnhancers(\r\n    applyMiddleware(thunk),\t\t\t//使用中间件\r\n    // other store enhancers if any\r\n);\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    enhancer,\r\n)\r\nexport default store;","import React,{Component} from \"react\";\r\nimport {connect} from 'react-redux';\r\n\r\nclass Notification extends Component{\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.LIST.length > 0){\r\n            setTimeout(()=>{\r\n                this.props.Remove();\r\n            }, 4000);\r\n        }\r\n    }\r\n    render(){\r\n        return <div id=\"notification\">\r\n            <span>\r\n                {\r\n                    this.props.LIST.map((item, index)=>{\r\n                        let level = item.level || \"Error\";\r\n                        let desc = item.desc || \"...\";\r\n                        return <div className=\"notice\" key={`${item.desc}${index}`}>\r\n                            <div className=\"level\">{level}</div>\r\n                            <div className=\"desc\">{desc}</div>\r\n                        </div>\r\n                    })\r\n                }\r\n            </span>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapState = (state)=>{\r\n    return{\r\n        LIST: state.list,\r\n    }\r\n}\r\n\r\nconst mapDispatch = (dispatch)=>{\r\n    return {\r\n        Remove: ()=>dispatch({type:\"Remove\"})\r\n    }\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(Notification);","import Mock from 'mockjs' // 引入mockjs\r\nimport settings from '../../setting';\r\n \r\nconst Random = Mock.Random // Mock.Random 是一个工具类，用于生成各种随机数据\r\n\r\n/*let size = [\r\n  '300x250', '250x250', '240x400', '336x280', \r\n  '180x150', '720x300', '468x60', '234x60', \r\n  '88x31', '120x90', '120x60', '120x240', \r\n  '125x125', '728x90', '160x600', '120x600', \r\n  '300x600'\r\n] // 定义随机值\r\nlet template = {\r\n    'Boolean': Random.boolean, // 可以生成基本数据类型\r\n    'Natural': Random.natural(1, 10), // 生成1到100之间自然数\r\n    'Integer': Random.integer(1, 100), // 生成1到100之间的整数\r\n    'Float': Random.float(0, 100, 0, 5), // 生成0到100之间的浮点数,小数点后尾数为0到5位\r\n    'Character': Random.character(), // 生成随机字符串,可加参数定义规则\r\n    'String': Random.string(2, 10), // 生成2到10个字符之间的字符串\r\n    'Range': Random.range(0, 10, 2), // 生成一个随机数组\r\n    'Date': Random.date(), // 生成一个随机日期,可加参数定义日期格式\r\n    'Image': Random.image(Random.size, '#02adea', 'Hello'), // Random.size表示将从size数据中任选一个数据\r\n    'Color': Random.color(), // 生成一个颜色随机值\r\n    'Paragraph':Random.paragraph(2, 5), //生成2至5个句子的文本\r\n    'Name': Random.name(), // 生成姓名\r\n    'Url': Random.url(), // 生成web地址\r\n    'Address': Random.province() // 生成地址\r\n}*/\r\n\r\nlet randomCard = {\r\n    draw: Random.integer(2, 15),\r\n    color: 'spade',  //黑桃spade,红桃heart,方片diamond,梅花club\r\n    img: Random.image(),\r\n}\r\n\r\n//Init\r\nMock.mock(settings.LoadingURL, 'post', (data)=>{\r\n    console.log(data);\r\n    return {\r\n        status: 200,\r\n        data: {\r\n            name: Random.name(),\r\n            token: Random.paragraph(2, 8),\r\n            bgImg: Random.image(),\r\n            action: true,\r\n            mcard: [\r\n                randomCard,\r\n                randomCard,\r\n                randomCard,\r\n                randomCard,\r\n                randomCard,\r\n            ],\r\n            ocard: 5,\r\n        },\r\n    }\r\n}) // 根据数据模板生成模拟数据\r\n\r\n//Draw\r\nMock.mock(settings.DrawURL, 'post', (data)=>{\r\n    console.log(data);\r\n    let status = 200;\r\n    if(JSON.parse(data.body).action !== 'draw'){\r\n        status = 401;\r\n    }\r\n\r\n    //抽牌\r\n    return {\r\n        status,\r\n        data: {\r\n            state: Random.boolean(), //没卡了返回false \r\n            card: randomCard\r\n        }\r\n    }\r\n});\r\n\r\n//Play\r\nMock.mock(settings.PlayURL, 'post', (data)=>{\r\n    console.log(data);\r\n    let status = 200;\r\n    if(JSON.parse(data.body).action !== 'play'){\r\n        status = 401;\r\n    }\r\n\r\n    //如果出牌错误, 返回出牌错误信息, 且切换status\r\n    return {\r\n        status,\r\n        data: {\r\n            msg: ''\r\n        }\r\n    }\r\n})\r\n\r\n//Timeout\r\nMock.mock(settings.TimeOutURL, 'post', (data)=>{\r\n    console.log(data);\r\n    let status = 200;\r\n    if(JSON.parse(data.body).action !== 'timeout'){\r\n        status = 401;\r\n    }\r\n\r\n    //如果超时错误, 返回超时错误信息, 且切换status\r\n    return {\r\n        status,\r\n        data: {\r\n            msg: ''\r\n        }\r\n    }\r\n})\r\n\r\n//Polling\r\nMock.mock(settings.PollingURL, 'post', (data)=>{\r\n    console.log(data);\r\n    let status = 200;\r\n    if(JSON.parse(data.body).action !== 'polling'){\r\n        status = 401;\r\n    }\r\n\r\n    //返回对手是否结束了回合\r\n    return {\r\n        status,\r\n        data: {\r\n            action: Random.integer(1, 3),  //1, 跳过了; 2, 放弃了; 3, 出牌了; 其它: 内部错误\r\n            get: Random.boolean(),  //谁赢了, true 对手赢了\r\n            end: false, //游戏是否结束\r\n            msg: \"\",\r\n            card: randomCard\r\n        }\r\n    }\r\n})","import React from 'react';\nimport Loading from './pages/loading';\nimport { Provider } from 'react-redux';\nimport store from './store/';\nimport Notification from './pages/Component/Notification';\nimport './pages/mock/mock';\n\nfunction App() {\n  return (\n    <Provider store={ store }>\n        <Loading />\n        <Notification />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}